name: UI Tests

on:
  workflow_call:
    inputs:
      branch:
        description: 'The branch to use'
        default: 'V3'
        required: false
        type: string
      base-url:
        description: 'The web3modal lab url'
        default: 'http://localhost:3000/'
        required: false
        type: string
      wallet-url:
        description: 'The wallet url'
        default: 'https://react-wallet.walletconnect.com/'
        required: false
        type: string
      command:
        description: 'The test command to run'
        default: 'playwright:test'
        required: false
        type: string
      skip-playwright-webserver:
        description: 'Skip setting up a local test server'
        default: false
        required: false
        type: boolean
      secure-site-url:
        description: 'Secure site SDK url'
        default: 'https://secure.walletconnect.com/sdk'
        required: false
        type: string
    secrets:
      NEXT_PUBLIC_PROJECT_ID:
        required: true
      TESTS_NEXTAUTH_SECRET:
        required: false
      TESTS_MAILSEC_API_KEY:
        required: false
      TESTS_SOCIAL_EMAIL:
        required: false
      TESTS_SOCIAL_PASSWORD:
        required: false

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          repository: WalletConnect/web3modal
          ref: ${{ inputs.branch }}
      - name: setup-node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['apps/laboratory']['devDependencies']['@playwright/test'])")" >> $GITHUB_ENV
      - name: Install Brave Browser
        working-directory: ./apps/laboratory/
        run: sudo ./scripts/install-brave-browser.sh
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-${{ hashFiles('apps/laboratory/tests/shared/constants/devices.ts') }}
      - name: install
        run: npm ci
      - name: build packages and lab
        run: npm run build:laboratory
        env:
          NEXT_PUBLIC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          NEXTAUTH_SECRET: ${{ secrets.TESTS_NEXTAUTH_SECRET }}
          MAILSAC_API_KEY: ${{ secrets.TESTS_MAILSEC_API_KEY }}
          NEXT_PUBLIC_SECURE_SITE_SDK_URL: ${{ inputs.secure-site-url }}
          SOCIAL_TEST_EMAIL: ${{ secrets.TESTS_SOCIAL_EMAIL }}
          SOCIAL_TEST_PASSWORD: ${{ secrets.TESTS_SOCIAL_PASSWORD }}
      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        working-directory: ./apps/laboratory/
        run: npm run playwright:install
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: ./apps/laboratory/build/
      - name: Upload Playwright browsers
        uses: actions/upload-artifact@v3
        with:
          name: playwright-browsers
          path: ~/.cache/ms-playwright

  ui_tests:
    name: 'Playwright Tests'
    if: ${{ !cancelled() }}
    needs: [ui_tests]
    runs-on:
      group: ubuntu-runners
    strategy:
      matrix:
        shard: [1, 2, 3, 4]
        shardTotal: [4]
    timeout-minutes: 15
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'

      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-output
          path: ./apps/laboratory/build/

      - name: Download Playwright browsers
        uses: actions/download-artifact@v2
        with:
          name: playwright-browsers
          path: ~/.cache/ms-playwright
      - name: Run Playwright tests
        env:
          BASE_URL: ${{ inputs.base-url }}
          WALLET_URL: ${{ inputs.wallet-url }}
          NEXT_PUBLIC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          SKIP_PLAYWRIGHT_WEBSERVER: ${{ inputs.skip-playwright-webserver }}
          NEXTAUTH_SECRET: ${{ secrets.TESTS_NEXTAUTH_SECRET }}
          MAILSAC_API_KEY: ${{ secrets.TESTS_MAILSEC_API_KEY }}
          NEXT_PUBLIC_SECURE_SITE_SDK_URL: ${{ inputs.secure-site-url }}
          SOCIAL_TEST_EMAIL: ${{ secrets.TESTS_SOCIAL_EMAIL }}
          SOCIAL_TEST_PASSWORD: ${{ secrets.TESTS_SOCIAL_PASSWORD }}
          CI: true
        working-directory: ./apps/laboratory/
        run: npm run ${{ inputs.command }} -- --shard=${{ matrix.shard }}/${{ matrix.shardTotal }}
      - name: Run canary with minimal environment config
        env:
          NEXT_PUBLIC_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_PROJECT_ID }}
          CI: true
        working-directory: ./apps/laboratory/
        run: npm run playwright:test:canary
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-${{ matrix.shardIndex }}
          path: ./apps/laboratory/playwright-report/
          retention-days: 7
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: screenshots-${{ matrix.shardIndex }}
          path: ./apps/laboratory/test-results/
          retention-days: 7

  merge-reports:
    if: ${{ !cancelled() }}
    needs: [ui_tests]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --reporter html ./all-blob-reports

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: ./apps/laboratory/playwright-report/
          retention-days: 7
